[t:trigger_fade_nodes_global_box,n:0x00200160]
{
	[common]
	{
		[instance_triggers]
		{
			[*]
			{
				action* = fade_nodes_global(0x5A6BE416,1,55,-1,"out:black");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(3.000000,2.000000,2.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  p position = -0.149902,1.85,5.39395,0xb25b96c7;
	}
}
[t:trigger_generic,n:0x0020017d]
{
	[common]
	{
		dev_instance_text = "FADE, AUTO SAVE";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200165,0f,"default","",0);
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(3.000000,0.500000,1.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200253,0f,"default","every",0);
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(3.000000,0.500000,1.000000,"on_first_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  p position = -0.143295,1.45,4.09079,0xb25b96c7;
	}
}
[t:trigger_change_mood_box,n:0x00200019]
{
	[common]
	{
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_2");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(1.000000,2.000000,3.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  q orientation = 0,0.190809,0,0.981627;
	  p position = -3.03867,1,6.05344,0x8a126d3a;
	}
}
[t:trigger_change_mood_box,n:0x0020001e]
{
	[common]
	{
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_1");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(1.000000,2.000000,3.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  q orientation = 0,0.275637,0,0.961262;
	  p position = 0.618275,1.40234,3.96944,0x8a126d3a;
	}
}
[t:trigger_generic,n:0x00200100]
{
	[common]
	{
		dev_instance_text = "SCRIPTED EVENT";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200101,0f,"default","",0);
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(8.000000,2.000000,4.000000,"on_first_enter"), doc("[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  p position = 0.0305252,2.65,0.0895767,0x07861e46;
	}
}
[t:trigger_change_mood_box,n:0x002000f5]
{
	[common]
	{
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_2");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(5.000000,2.000000,1.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[placement]
	{
	  q orientation = 0,1,0,0;
	  p position = -0.0888138,9.53674e-007,-2.84857,0x06880eb8;
	}
}
[t:trigger_generic,n:0x002001bd]
{
	[common]
	{
		dev_instance_text = "NIS / MOOD";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200102,0f,"0x4007","",0), doc("start nis");
				action* = send_world_message("we_req_activate",0x002001EA,0f,"0x4007","every",0), delay(0.2), doc("move party");
				action* = send_world_message("we_req_activate",0x0020000A,0f,"default","",0), delay(6), doc("start elevator sequence");
				action* = send_world_message("we_trigger_activate",0x00200227,0f,"0x4007","",0), delay(30), doc("move party again for vator exit");
				action* = send_world_message("we_req_activate",0x00200234,0f,"default","every",0), doc("gom nis music");
				action* = send_world_message("we_trigger_activate",0x00200251,0f,"default","every",0), delay(0.1), doc("activate party move failsafe");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(6.000000,0.500000,1.000000,"on_first_enter"), doc("sp only[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
			[*]
			{
				action* = send_world_message("we_req_activate",0x0020000A,0f,"default","",0), delay(1), doc("start elevator sequence");
				action* = send_world_message("we_trigger_activate",0x00200228,0f,"default","every",0), doc("activate fight mood trigger below");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(6.000000,0.500000,1.000000,"on_first_enter"), doc("sp only [*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = false;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  p position = -2.10349,71.0181,3.40501,0xb9f57f40;
	}
}
[t:trigger_change_mood_box,n:0x00200234]
{
	[common]
	{
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_3"), doc("gom nis mood");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*one-shot check (trigger is one-shot)*]");
				condition* = party_member_within_node(0x5A6BE416,2,-1,-1,"wait_for_every_message"), doc("[*message checker (trigger is non-pure )*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  p position = -0.498627,70.65,3.2905,0xb9f57f40;
	}
}
[t:trigger_generic,n:0x00200251]
{
	[common]
	{
		dev_instance_text = "SP PARTY MOVE FAILSAFE";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x002001EA,0f,"0x4002","every",0), doc("move party failsafe");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(6.000000,1.000000,4.000000,"while_inside"), doc("sp only[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 1.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[placement]
	{
	  p position = -2.18398,70.65,2.39416,0xb9f57f40;
	}
}
[t:interest_point,n:0x0020022e]
{
	[placement]
	{
	  p position = -1.34661,0,-0.615036,0x242a41dc;
	}
}
[t:blocking_object,n:0x002001ef]
{
	[common]
	{
		dev_instance_text = "SP only -- path blocker";
	  b is_multi_player = false;
	}
	[placement]
	{
	  p position = -6.62822,-3.6,-9.63496,0xc9bc7ba4;
	}
}
[t:blocking_object,n:0x00200208]
{
	[common]
	{
		dev_instance_text = "SP only -- path blocker";
	  b is_multi_player = false;
	}
	[placement]
	{
	  p position = 5.20754,-3.6,-10.182,0xc9bc7ba4;
	}
}
[t:trigger_generic,n:0x0020021a]
{
	[common]
	{
		dev_instance_text = "QUAKE EFFECT";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200219,0f,"default","",0), doc("quake");
				action* = send_world_message("we_req_activate",0x0020021C,0f,"default","",0), doc("flares on");
				action* = send_world_message("we_req_activate",0x00200221,0f,"default","",0), delay(2), doc("flares off");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 0,0.5,1;
	}
	[placement]
	{
	  p position = 7.80905,-3.55016,-4.52933,0xc9bc7ba4;
	}
}
[t:trigger_generic,n:0x0020021c]
{
	[common]
	{
		dev_instance_text = "FLARES ON";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x0020021B,0f,"default","",0), doc("geyser 1");
				action* = send_world_message("we_req_activate",0x0020021E,0f,"default","",0), doc("geyser 2");
				action* = send_world_message("we_req_activate",0x0020021F,0f,"default","",0), doc("geyser 3");
				action* = send_world_message("we_req_activate",0x00200220,0f,"default","",0), doc("geyser 4");
				action* = send_world_message("we_req_activate",0x00200222,0f,"default","",0), doc("light 1");
				action* = send_world_message("we_req_activate",0x00200224,0f,"default","",0), doc("light 2");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 0,0.5,1;
	}
	[placement]
	{
	  q orientation = 0,0.707107,0,0.707107;
	  p position = 7.86868,-3.60001,-2.41835,0xc9bc7ba4;
	}
}
[t:trigger_generic,n:0x00200221]
{
	[common]
	{
		dev_instance_text = "FLARES OFF";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_deactivate",0x0020021B,0f,"default","",0), doc("geyser 1");
				action* = send_world_message("we_req_deactivate",0x0020021E,0f,"default","",0), doc("geyser 2");
				action* = send_world_message("we_req_deactivate",0x0020021F,0f,"default","",0), doc("geyser 3");
				action* = send_world_message("we_req_deactivate",0x00200220,0f,"default","",0), doc("geyser 4");
				action* = send_world_message("we_req_deactivate",0x00200222,0f,"default","",0), doc("light 1 off");
				action* = send_world_message("we_req_deactivate",0x00200224,0f,"default","",0), doc("light 2 off");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 0,0.5,1;
	}
	[placement]
	{
	  q orientation = 0,0.707107,0,0.707107;
	  p position = 6.86762,-3.44698,-2.53223,0xc9bc7ba4;
	}
}
[t:blocking_object,n:0x00200225]
{
	[common]
	{
		dev_instance_text = "Block path behind throne";
	}
	[placement]
	{
	  p position = -5.4848,-3.60001,8.37309,0xc9bc7ba4;
	}
}
[t:blocking_object,n:0x00200226]
{
	[common]
	{
		dev_instance_text = "block path behind throne";
	}
	[placement]
	{
	  p position = 6.78164,-3.60001,8.69774,0xc9bc7ba4;
	}
}
[t:trigger_generic,n:0x002001ba]
{
	[common]
	{
		dev_instance_text = "SGOM DEAD MOOD / QUEST UPDATE";
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_6"), delay(8), doc("super gom dead mood");
				action* = change_quest_state("quest_destroy_gom","completed",0), doc("finish gom quest");
				action* = change_quest_state("quest_destroy_gom2","completed",0), doc("finish gom quest");
				action* = send_world_message("we_req_activate",0x00200229,0f,"default","every",0), doc("update journal");
				action* = mood_change("map_world_gom2_4"), doc("no music while he dies");
				action* = mood_change("map_world_gom2_2"), delay(29), doc("back to normal");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*converted to one-shot*]");
				condition* = party_member_within_node(0x5A6BE416,1,99,-1,"wait_for_every_message"), doc("[*message checker (trigger is non-pure )*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.5,0.1;
	}
	[placement]
	{
	  p position = 0.833878,0,0.306374,0x44edf23a;
	}
}
[t:activate_chapter,n:0x00200229]
{
	[activate_chapter]
	{
		chapter = "chapter_9";
	  i order = 1;
	}
	[placement]
	{
	  q orientation = 0,-0.707107,0,0.707107;
	  p position = 0.81601,0,1.73367,0x44edf23a;
	}
}
[t:trigger_generic,n:0x00200228]
{
	[common]
	{
		dev_instance_text = "MOOD (SP/MP) / GOM ACTIVATE (MP)";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_talk_end",0x002001AD,0f,"default","",0), doc("make gom evil");
				action* = send_world_message("we_req_activate",0x00200155,0f,"default","",0), doc("throne down");
				action* = change_quest_state("quest_destroy_gom","active",1);
				action* = change_quest_state("quest_destroy_gom2","active",1);
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(15.000000,3.000000,15.000000,"on_first_enter"), doc("[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = false;
			  b single_shot = true;
			  b start_active = true;
			}
			[*]
			{
				action* = mood_change("map_world_gom2_5"), doc("fight mood for sp late arrivals and mp");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(15.000000,3.000000,15.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[placement]
	{
	  p position = -0.88652,4.73779,-10.8285,0x02355ebf;
	}
}
[t:interest_point,n:0x00200230]
{
	[placement]
	{
	  p position = 0.218353,2.66341,3.77518,0x02355ebf;
	}
}
[t:trigger_generic,n:0x002001b8]
{
	[common]
	{
		dev_instance_text = "FAKE-OUT MOOD";
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_4"), doc("no more fight mood. gom dead?");
				action* = mood_change("map_world_gom2_5"), delay(21), doc("fight mood again");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*converted to one-shot*]");
				condition* = party_member_within_node(0x5A6BE416,1,99,-1,"wait_for_every_message"), doc("[*message checker (trigger is non-pure )*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.5,0.1;
	}
	[placement]
	{
	  p position = -1.93941,0,0.347839,0x861677d1;
	}
}
[t:interest_point,n:0x0020023a]
{
	[placement]
	{
	  q orientation = 0,-0.707107,0,0.707107;
	  p position = 1.38147,0,1.02995,0x861677d1;
	}
}
[t:trigger_generic,n:0x00200240]
{
	[common]
	{
		dev_instance_text = "FIGHT MOOD (SP)";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_5"), doc("fight mood");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*converted to one-shot*]");
				condition* = party_member_within_node(0x5A6BE416,1,99,-1,"wait_for_every_message"), doc("[*message checker (trigger is non-pure )*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.5,0.1;
	}
	[placement]
	{
	  p position = -0.825974,0,0.355072,0x861677d1;
	}
}
[t:interest_point,n:0x0020021d]
{
	[placement]
	{
	  p position = -0.228733,0,0.135025,0x2f9c23da;
	}
}
[t:interest_point,n:0x00200239]
{
	[placement]
	{
	  p position = 0.838326,0,-0.597076,0x66e7f1c4;
	}
}
[t:interest_point,n:0x00200238]
{
	[placement]
	{
	  p position = 0.869972,0,0.893219,0x3f2fa67d;
	}
}
[t:interest_point,n:0x0020022c]
{
	[placement]
	{
	  q orientation = 0,-0.707107,0,0.707107;
	  p position = -1.10004,0,-0.178741,0x98fbcf84;
	}
}
[t:interest_point,n:0x00200237]
{
	[placement]
	{
	  p position = 1.40048,0,-0.0698013,0x93b38ee4;
	}
}
[t:interest_point,n:0x00200236]
{
	[placement]
	{
	  p position = 0.990749,0,-1.11052,0xfaf26c1f;
	}
}
[t:interest_point,n:0x0020022b]
{
	[placement]
	{
	  q orientation = 0,1,0,0;
	  p position = -0.7146,0,1.93219,0x7ee0afcc;
	}
}
[t:interest_point,n:0x00200233]
{
	[placement]
	{
	  p position = 1.27914,0,1.84543,0x3e976114;
	}
}
[t:interest_point,n:0x0020023b]
{
	[placement]
	{
	  q orientation = 0,-0.707107,0,0.707107;
	  p position = 0.0979767,0,-1.77119,0xad44dbc8;
	}
}
[t:interest_point,n:0x0020022d]
{
	[placement]
	{
	  p position = -0.342377,0,1.58522,0x659ac0be;
	}
}
[t:trigger_generic,n:0x0020000a]
{
	[common]
	{
		dev_instance_text = "FIRST-TIME ELEVATOR DOWN SEQUENCE";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200018,0f,"default","",0), delay(18.7), doc("elevator down");
				action* = send_world_message("we_req_activate",0x0020001C,0f,"default","",0), delay(18), doc("level quake");
				action* = send_world_message("we_req_activate",0x0020003E,0f,"default","",0), delay(3), doc("fire1");
				action* = send_world_message("we_req_activate",0x00200042,0f,"default","",0), delay(3.3), doc("flicker1");
				action* = send_world_message("we_req_activate",0x0020003F,0f,"default","",0), delay(6), doc("fire2");
				action* = send_world_message("we_req_activate",0x00200043,0f,"default","",0), delay(6.3), doc("flicker2");
				action* = send_world_message("we_req_activate",0x0020003A,0f,"default","",0), delay(9), doc("fire3");
				action* = send_world_message("we_req_activate",0x0020003B,0f,"default","",0), delay(9.3), doc("flicker3");
				action* = send_world_message("we_req_activate",0x0020003C,0f,"default","",0), delay(12), doc("fire4");
				action* = send_world_message("we_req_activate",0x00200040,0f,"default","",0), delay(12.3), doc("flicker4");
				action* = send_world_message("we_req_activate",0x0020003D,0f,"default","",0), delay(15), doc("fire5");
				action* = send_world_message("we_req_activate",0x00200041,0f,"default","",0), delay(15.3), doc("flicker5");
				action* = send_world_message("we_req_activate",0x00200048,0f,"default","",0), delay(3), doc("enable1");
				action* = send_world_message("we_req_activate",0x00200049,0f,"default","",0), delay(6), doc("enable2");
				action* = send_world_message("we_req_activate",0x00200044,0f,"default","",0), delay(9), doc("enable3");
				action* = send_world_message("we_req_activate",0x00200046,0f,"default","",0), delay(12), doc("enable4");
				action* = send_world_message("we_req_activate",0x00200047,0f,"default","",0), delay(15), doc("enable5");
				action* = send_world_message("we_req_activate",0x002001F0,0f,"default","every",0), delay(18), doc("vator sound for nis");
				action* = send_world_message("we_trigger_deactivate",0x00200251,0f,"default","every",0), delay(18), doc("turn off failsafe trigger");
				action* = send_world_message("we_trigger_activate",0x002000F5,0f,"default","every",0), doc("turn on pre-vator mood trigger");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.5,0;
	}
	[placement]
	{
	  p position = -5.61585,1.17643,-1.06604,0x8daa367b;
	}
}
[t:trigger_rec_msg_activate,n:0x002000f4]
{
	[common]
	{
		dev_instance_text = "MOVE PARTY (SP)";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000F3,0f,"0x4002","every",0), doc("move party off elevator");
			  b can_self_destruct = true;
				condition* = party_member_within_node(0x5A6BE416,2,50,-1,"on_first_enter"), doc("on elevator?[*message checker (trigger is non-pure )*][*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = false;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0,0;
	}
	[placement]
	{
	  p position = -0.101501,0.114865,8.35605,0x8daa367b;
	}
}
[t:trigger_rec_msg_activate,n:0x002000f8]
{
	[common]
	{
		dev_instance_text = "FIRE IF NOBODY IS ON ELEVATOR (WHEN DOWN)";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000FA,0f,"default","",0), doc("go up when last guy leaves elevator");
			  b can_self_destruct = true;
				condition* = party_member_within_node(0x5A6BE416,2,50,-1,"on_every_last_leave"), doc("check to see if party member is within node");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0,0;
	}
	[placement]
	{
	  p position = 4.6992,1.29699,4.22145,0x8daa367b;
	}
}
[t:trigger_rec_msg_activate,n:0x002000fa]
{
	[common]
	{
		dev_instance_text = "ELEVATOR UP SEQUENCE";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200018,0f,"default","",0), delay(5), doc("move elevator up");
				action* = send_world_message("we_trigger_deactivate",0x002000F8,0f,"default","",0), delay(0.1), doc("turn off nobody on elevator trigger");
				action* = send_world_message("we_req_deactivate",0x0020003F,0f,"default","",0), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200043,0f,"default","",0), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200049,0f,"default","",0), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x0020003A,0f,"default","",0), delay(0.6), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200044,0f,"default","",0), delay(0.6), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x0020003B,0f,"default","",0), delay(0.6), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x0020003C,0f,"default","",0), delay(1.2), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200046,0f,"default","",0), delay(1.2), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200040,0f,"default","",0), delay(1.2), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x0020003D,0f,"default","",0), delay(1.8), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200047,0f,"default","",0), delay(1.8), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200041,0f,"default","",0), delay(1.8), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x0020003E,0f,"default","",0), delay(2.4), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200048,0f,"default","",0), delay(2.4), doc("fire off");
				action* = send_world_message("we_req_deactivate",0x00200042,0f,"default","",0), delay(2.4), doc("fire off");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0,0.3;
	}
	[placement]
	{
	  p position = -4.29601,1.04697,0.0874023,0x8daa367b;
	}
}
[t:trigger_rec_msg_activate,n:0x002000fb]
{
	[common]
	{
		dev_instance_text = "ELEVATOR L1 ACTIONS";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000FF,0f,"default","",0), doc("camera shake");
				action* = send_world_message("we_trigger_activate",0x002000FC,0f,"default","",0), delay(15), doc("check if someone is on elevator before lowering again (give time to disembark)");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message"), doc("from elevator l1");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000FD,0f,"default","every",0), delay(15), doc("go down automatically (forever) once gom is destroyed instead of waiting for someone to be there");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message"), doc("from elevator l1 (after gom is dead)");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,1,1;
	}
	[placement]
	{
	  p position = 0.131729,1.28137,4.13536,0x8daa367b;
	}
}
[t:trigger_rec_msg_activate,n:0x002000fc]
{
	[common]
	{
		dev_instance_text = "FIRE IF SOMEONE IS ON ELEVATOR (WHEN UP)";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000FD,0f,"default","",0), doc("send elevator down if someone is on it");
			  b can_self_destruct = true;
				condition* = party_member_within_node(0x5A6BE416,2,50,-1,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0,0;
	}
	[placement]
	{
	  p position = -1.16696,0.950001,3.9451,0x8daa367b;
	}
}
[t:trigger_rec_msg_activate,n:0x002000fd]
{
	[common]
	{
		dev_instance_text = "ELEVATOR DOWN SEQUENCE";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200018,0f,"default","",0), delay(10), doc("move elevator down");
				action* = send_world_message("we_trigger_deactivate",0x002000FC,0f,"default","",0), delay(0.1), doc("turn off detection of someone on elevator");
				action* = send_world_message("we_req_activate",0x0020003F,0f,"default","",0), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200043,0f,"default","",0), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200049,0f,"default","",0), doc("fire on");
				action* = send_world_message("we_req_activate",0x0020003A,0f,"default","",0), delay(2), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200044,0f,"default","",0), delay(2), doc("fire on");
				action* = send_world_message("we_req_activate",0x0020003B,0f,"default","",0), delay(2), doc("fire on");
				action* = send_world_message("we_req_activate",0x0020003C,0f,"default","",0), delay(4), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200046,0f,"default","",0), delay(4), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200040,0f,"default","",0), delay(4), doc("fire on");
				action* = send_world_message("we_req_activate",0x0020003D,0f,"default","",0), delay(6), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200047,0f,"default","",0), delay(6), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200041,0f,"default","",0), delay(6), doc("fire on");
				action* = send_world_message("we_req_activate",0x0020003E,0f,"default","",0), delay(8), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200048,0f,"default","",0), delay(8), doc("fire on");
				action* = send_world_message("we_req_activate",0x00200042,0f,"default","",0), delay(8), doc("fire on");
				action* = send_world_message("we_req_activate",0x002000FF,0f,"default","",0), delay(10), doc("quake");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0,0.5;
	}
	[placement]
	{
	  p position = -4.39827,1.20087,-1.05104,0x8daa367b;
	}
}
[t:trigger_generic,n:0x00200162]
{
	[common]
	{
		dev_instance_text = "ELEVATOR L2 ACTIONS";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x0020001C,0f,"default","",0), doc("shake screen");
				action* = send_world_message("we_req_activate",0x002001B9,0f,"default","every",0), doc("raise elevator when nobody is on it");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message"), doc("from elevator l2");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
			[*]
			{
				action* = send_world_message("we_trigger_activate",0x002000F4,0f,"default","",0), delay(0.3), doc("detect party for move");
				action* = send_world_message("we_req_activate",0x00200235,0f,"default","every",0), doc("play elevator stop sound for nis");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_first_message"), doc("sp only when elevator lowers");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000FA,0f,"default","every",0), delay(15), doc("raise elevator on timer after gom is dead");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message"), doc("after gom is dead");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = false;
			}
		}
	}
	[placement]
	{
	  p position = 1.35291,1.05871,3.91757,0x8daa367b;
	}
}
[t:trigger_generic,n:0x002001b9]
{
	[common]
	{
		dev_instance_text = "ENABLE UP VATOR SEQUENCE  (DEACTIVATED BY GOM DEATH)";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x0020024D,0f,"default","every",0), doc("check if anyone is on elevator");
				action* = send_world_message("we_req_activate",0x0020024E,0f,"default","every",0), delay(1), doc("send elevator up by default");
				action* = send_world_message("we_trigger_activate",0x0020024E,0f,"default","every",0), doc("turn on default trigger");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message"), doc("from l2 trigger");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.4,0.4;
	}
	[placement]
	{
	  p position = 2.53638,1.10933,3.91551,0x8daa367b;
	}
}
[t:trigger_generic,n:0x00200227]
{
	[common]
	{
		dev_instance_text = "MOVE PPL HERE (SP)";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x00200243,0f,"0x4002","every",0), doc("move");
			  b can_self_destruct = true;
				condition* = party_member_within_node(0x5A6BE416,2,50,-1,"on_first_enter"), doc("activated by nis trigger[*one-shot check (trigger is one-shot)*]");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = false;
			}
		}
	}
	[placement]
	{
	  p position = 1.13819,0.093133,7.01292,0x8daa367b;
	}
}
[t:trigger_generic,n:0x0020024d]
{
	[common]
	{
		dev_instance_text = "IS ANYONE ON ELEVATOR? IF NOT, GO UP";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_trigger_deactivate",0x0020024E,0f,"default","every",0), delay(0.5), doc("stop elevator from going up if someone is on it");
				action* = send_world_message("we_trigger_activate",0x002000F8,0f,"default","every",0), doc("enable *go up after last guy leaves* trigger");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message");
				condition* = party_member_within_node(0x5A6BE416,2,50,-1,"wait_for_every_message");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.2,0.2;
	}
	[placement]
	{
	  p position = 3.82438,1.09527,3.87193,0x8daa367b;
	}
}
[t:trigger_generic,n:0x0020024e]
{
	[common]
	{
		dev_instance_text = "GO UP IF NOBODY CAME DOWN ELEVATOR";
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_req_activate",0x002000FA,0f,"default","every",0), doc("send elevator up");
			  b can_self_destruct = true;
				condition* = receive_world_message("we_req_activate",0,"on_every_message");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[gizmo]
	{
	  v diffuse_color = 1,0.2,0.2;
	}
	[placement]
	{
	  p position = 3.80145,1.09527,5.00897,0x8daa367b;
	}
}
[t:trigger_generic,n:0x00200250]
{
	[common]
	{
		dev_instance_text = "SP PARTY MOVE FAILSAFE DEACTIVATE";
	  b is_multi_player = false;
		[instance_triggers]
		{
			[*]
			{
				action* = send_world_message("we_trigger_deactivate",0x00200251,0f,"default","every",0), doc("turn off failsafe trigger");
			  b can_self_destruct = true;
				condition* = party_member_within_node(0x5A6BE416,2,50,-1,"on_first_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = false;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = true;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  p position = 1.39111,-0.0500059,-6.31609,0x8daa367b;
	}
}
[t:trigger_change_mood_box,n:0x0020012e]
{
	[common]
	{
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_1");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(6.000000,1.000000,10.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  q orientation = 0,0.707107,0,0.707107;
	  p position = 0.773815,4,1.81037,0x30924138;
	}
}
[t:use_point,n:0x00200164]
{
	[placement]
	{
	  p position = -0.622447,-4.76837e-007,-1.70684,0x5c744514;
	}
}
[t:use_point,n:0x00200166]
{
	[placement]
	{
	  p position = -0.466621,9.53674e-007,-1.35975,0x5c744514;
	}
}
[t:use_point,n:0x00200168]
{
	[placement]
	{
	  p position = 1.4003,-4.76837e-007,-0.623807,0x5c744514;
	}
}
[t:trigger_change_mood_box,n:0x00200024]
{
	[common]
	{
		[instance_triggers]
		{
			[*]
			{
				action* = mood_change("map_world_gom2_2");
			  b can_self_destruct = true;
				condition* = party_member_within_bounding_box(3.000000,3.000000,3.000000,"on_every_enter");
			  f delay = 0.000000;
			  b flip_flop = false;
			  b multi_player = true;
			  b no_trig_bits = false;
				occupants_group = ;
			  f reset_duration = 0.000000;
			  b single_player = true;
			  b single_shot = false;
			  b start_active = true;
			}
		}
	}
	[placement]
	{
	  q orientation = 0,1,0,0;
	  p position = -0.0792313,4,-0.681183,0x2acdde88;
	}
}
