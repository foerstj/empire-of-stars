/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_talk_scholar.skrit

	Author(s)	: 	Eric Tams

	Purpose		: 	Just stand there and talk at anyone we're told to.

	(C)opyright 2000 Gas Powered Games, Inc.

  ----------------------------------------------------------------------------
  ============================================================================
*/

Go			m_Go$;
GoMind		m_Mind$;
GoBody  	m_Body$;
Job			m_Job$;
Goid		m_Target$;

#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init
event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}

event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

	SetState Talk$;
}

////////////////////////////////////////////////////////////////////////////////
//	blab blab away... pretend you're Lee
state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		}
	}
	
	trigger OnWorldMessage$( WE_ANIM_DONE )
	{
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
	}

	event OnEnterState$
	{
		// $$$ read/write variables from the Game Auditor here, and bring up the appropriate dialogs...
		m_Go$.GetConversation.RSSelectConversation( "conversation_azunite_scholar" );
		
		if ( GameAuditor.GetDb.GetBool( "quest_purify_temple_boss_dead" ) )
		{
			m_Go$.GetConversation.RSSelectConversation( "conversation_azunite_scholar_boss_dead" );
			PostWorldMessage( WE_REQ_ACTIVATE, m_Go$.Goid, m_Go$.Goid, 4.0 );	
		}
		else if( GameAuditor.GetDb.GetBool( "talked_scholar") )
		{
			PostWorldMessage( WE_REQ_ACTIVATE, m_Go$.Goid, m_Go$.Goid, 4.0 );
		}
		
		GameAuditor.GetDb.SetBool( "talked_scholar", true);
		
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		
		m_Go$.GetConversation.RSActivateDialogue();
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		// $$$ close up any dialogs here...

		m_Job$.MarkForDeletion();
	}
}


