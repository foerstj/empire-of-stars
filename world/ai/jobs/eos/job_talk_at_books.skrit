Go		m_Go$;
GoMind	m_Mind$;
GoBody  m_Body$;
Job		m_Job$;
Goid	m_Target$;

#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"


property    bool    face_player$    = true  doc = "Face player when starting to talk";


startup state STARTUP$
{
}

event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}

event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

    if ( face_player$ )
    {
        SetState Face$;
    }
    else
    {
        SetState Talk$;
    }
}

state Face$
{
	transition
	{
		-> Talk$:	OnWorldMessage( WE_MCP_FACING_LOCKEDON );
	}

	event OnEnterState$
	{
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE, m_Target$ );
	}
}

state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( !GameAuditor.GetDb.GetBool( "ardun_gave_book" ) )
			{
				if( m_Target$.IsValid() )
				{
					GameAuditor.GetDb.SetBool( "ardun_gave_book", true );

					SiegePos SpawnPos$;

					GoCloneReq cloneReq$ = MakeGoCloneReq( "book_glb_lore_altair_3" );

					SpawnPos$ = m_Target$.go.placement.position;
					cloneReq$.StartingPos	= SpawnPos$;

					If( m_Target$.Go.Hasmind )
					{
						if( AIQuery.FindSpotRelativeToSource( m_Target$.Go, .25, .5, 2.0, m_Target$.Go.Mind.TempPos1 ) )
				   		{
				   			cloneReq$.StartingPos = m_Target$.Go.Mind.TempPos1;
				   		}
				   	}
					cloneReq$.SnapToTerrain = true;
			        GoDb.SCloneGo( cloneReq$ );
				}
			}
		}
	}

	event OnEnterState$
	{
		#only( game )
		[[
			int books$ = 0;

			if ( Goid.InValidGoid != UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_altair_1", m_Target$ ) )
			{
				books$ += 1;
			}	
				
			if ( Goid.InValidGoid != UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_altair_2", m_Target$ ) )
			{
				books$ += 1;
			}
				
			if ( Goid.InValidGoid != UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_altair_3", m_Target$ ) )
			{
				books$ += 1;
			}

			if( books$ == 2 ) {
				m_Go$.GetConversation.RSSelectConversation( "conversation_apprentice_one_book" );
				TryAnim$('talk');
			} else if( books$ == 3 ) {
				// delete books here.

				goid temp_book$ = UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_altair_1", m_Target$ );
				temp_book$.Go.Parent.Mind.SDoJob( MakeJobReq( JAT_DROP, JQ_ACTION, QP_FRONT, AO_REFLEX, temp_book$ ) );
				PostWorldMessage( WE_REQ_DELETE, temp_book$, temp_book$, .1 );

				temp_book$ = UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_altair_2", m_Target$ );
				temp_book$.Go.Parent.Mind.SDoJob( MakeJobReq( JAT_DROP, JQ_ACTION, QP_FRONT, AO_REFLEX, temp_book$ ) );
				PostWorldMessage( WE_REQ_DELETE, temp_book$, temp_book$, .1 );

				temp_book$ = UIPartyManager.DoesActivePartyHaveTemplate( "book_glb_lore_altair_3", m_Target$ );
				temp_book$.Go.Parent.Mind.SDoJob( MakeJobReq( JAT_DROP, JQ_ACTION, QP_FRONT, AO_REFLEX, temp_book$ ) );
				PostWorldMessage( WE_REQ_DELETE, temp_book$, temp_book$, .1 );

				// reward the player

				SiegePos SpawnPos$;

				GoCloneReq cloneReq$ = MakeGoCloneReq( "gold" );

				SpawnPos$ = m_Target$.go.placement.position;
				cloneReq$.StartingPos	= SpawnPos$;

				If( m_Target$.Go.Hasmind )
				{
					if( AIQuery.FindSpotRelativeToSource( m_Target$.Go, 1, 1.5, 2.0, m_Target$.Go.Mind.TempPos1 ) )
			   		{
			   			cloneReq$.StartingPos = m_Target$.Go.Mind.TempPos1;
			   		}
			   	}	
				cloneReq$.SnapToTerrain = true;

		        Goid gold$ = GoDb.SCloneGo( cloneReq$ );
		        gold$.Go.Aspect.SetGoldValue(200);

				m_Go$.GetConversation.RSSelectConversation( "conversation_apprentice_two_books" );
				TryAnim$('talk');
			} else if ( Victory.IsQuestCompleted( "altair_apprentice_books" ) ) {
				m_Go$.GetConversation.RSSelectConversation( "conversation_apprentice_complete" );
				TryAnim$('talk');
			} else {
				m_Go$.GetConversation.RSSelectConversation( "conversation_apprentice" );
				TryAnim$('talk');
			}
		]]

		m_Go$.GetConversation.RSActivateDialogue();
	}
}

state Exiting$
{
	event OnEnterState$
	{
        if ( face_player$ )
        {
            MCPManager.MakeRequest( m_Go$.Goid, PL_FACE );
        }

		m_Job$.MarkForDeletion();
	}
}
